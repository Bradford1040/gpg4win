#! /bin/sh
patch -p1 -f -l $* < $0
exit $?

From c1797f5a0001afc8761b6dfd45dd6d0f56053dcb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ingo=20Kl=C3=B6cker?= <dev@ingo-kloecker.de>
Date: Tue, 15 Apr 2025 14:12:20 +0200
Subject: [PATCH 3/3] Use system colors if high-contrast mode is active

---
 .../platforms/windows/qwindowstheme.cpp       | 49 ++++++++++++++++++-
 1 file changed, 48 insertions(+), 1 deletion(-)

diff --git a/src/plugins/platforms/windows/qwindowstheme.cpp b/src/plugins/platforms/windows/qwindowstheme.cpp
index a8ecab79de2..fe719ea5b45 100644
--- a/src/plugins/platforms/windows/qwindowstheme.cpp
+++ b/src/plugins/platforms/windows/qwindowstheme.cpp
@@ -404,6 +404,49 @@ void QWindowsTheme::populateDarkSystemBasePalette(QPalette &result)
     result.setColor(QPalette::All, QPalette::Accent, accentLighter);
 }

+static inline void populateHighContrastSystemPalette(QPalette &result)
+{
+    // These are the only system colors that are support for Windows 10+
+    const QColor buttonBackground = getSysColor(COLOR_3DFACE);
+    const QColor buttonText = getSysColor(COLOR_BTNTEXT);
+    const QColor disabledText = getSysColor(COLOR_GRAYTEXT);
+    const QColor selectionBackground = getSysColor(COLOR_HIGHLIGHT);
+    const QColor selectionText = getSysColor(COLOR_HIGHLIGHTTEXT);
+    const QColor linkText = getSysColor(COLOR_HOTLIGHT);
+    const QColor windowBackground = getSysColor(COLOR_WINDOW);
+    const QColor windowText = getSysColor(COLOR_WINDOWTEXT);
+
+    result.setColor(QPalette::All, QPalette::WindowText, windowText);
+    result.setColor(QPalette::All, QPalette::Text, windowText);
+    result.setColor(QPalette::All, QPalette::BrightText, windowText);
+
+    result.setColor(QPalette::All, QPalette::Button, buttonBackground);
+    result.setColor(QPalette::All, QPalette::ButtonText, buttonText);
+    result.setColor(QPalette::All, QPalette::Light, buttonBackground);
+    result.setColor(QPalette::All, QPalette::Midlight, buttonBackground);
+    result.setColor(QPalette::All, QPalette::Dark, buttonBackground);
+    result.setColor(QPalette::All, QPalette::Mid, buttonBackground);
+    result.setColor(QPalette::All, QPalette::Shadow, buttonBackground);
+
+    result.setColor(QPalette::All, QPalette::Base, windowBackground);
+    result.setColor(QPalette::All, QPalette::Window, windowBackground);
+
+    result.setColor(QPalette::All, QPalette::Highlight, selectionBackground);
+    result.setColor(QPalette::All, QPalette::HighlightedText, selectionText);
+    result.setColor(QPalette::All, QPalette::Link, linkText);
+    result.setColor(QPalette::All, QPalette::LinkVisited, linkText);
+    result.setColor(QPalette::All, QPalette::AlternateBase, windowBackground);
+    result.setColor(QPalette::All, QPalette::ToolTipBase, buttonBackground);
+    result.setColor(QPalette::All, QPalette::ToolTipText, buttonText);
+    result.setColor(QPalette::All, QPalette::PlaceholderText, disabledText);
+    result.setColor(QPalette::All, QPalette::Accent, selectionBackground);
+
+    result.setColor(QPalette::Disabled, QPalette::WindowText, disabledText);
+    result.setColor(QPalette::Disabled, QPalette::Text, disabledText);
+    result.setColor(QPalette::Disabled, QPalette::BrightText, disabledText);
+    result.setColor(QPalette::Disabled, QPalette::ButtonText, disabledText);
+}
+
 static inline QPalette toolTipPalette(const QPalette &systemPalette, bool light)
 {
     QPalette result(systemPalette);
@@ -657,6 +700,10 @@ QPalette QWindowsTheme::systemPalette(Qt::ColorScheme colorScheme)
 {
     QPalette result = standardPalette();

+    if (queryHighContrast()) {
+        populateHighContrastSystemPalette(result);
+        return result;
+    }
     switch (colorScheme) {
     case Qt::ColorScheme::Light:
         populateLightSystemBasePalette(result);
--
2.49.0
