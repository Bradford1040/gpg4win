#! /bin/sh
patch -p1 -l -f $* < $0
exit $?

From c59885000ba68b98f7dd2204106fbab44d29aec7 Mon Sep 17 00:00:00 2001
From: Andre Heinecke <aheinecke@gnupg.org>
Date: Wed, 24 Jul 2024 16:40:05 +0200
Subject: [PATCH] DRAFT: There is no dark mode on old Windows

This checks for the Operating System Version like
Qt5 does, too. Before checking dark mode through
the registry.

This solves an issue where dark mode colors
were loaded even though the style did not support
it.

A better fix will also include the high contrast
detection which for Qt5 is patched into KIconThemes.

GnuPG-Bug-Id: T6932
---
 src/colors/kcolorschemewatcher_win.cpp | 15 +++++++++++++--
 src/colors/kcolorschemewatcher_win.h   |  2 ++
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/src/colors/kcolorschemewatcher_win.cpp b/src/colors/kcolorschemewatcher_win.cpp
index 7f9d4f8..83d3459 100644
--- a/src/colors/kcolorschemewatcher_win.cpp
+++ b/src/colors/kcolorschemewatcher_win.cpp
@@ -12,11 +12,23 @@

 #include <QDebug>

+#include <QOperatingSystemVersion>
+bool KColorSchemeWatcherWin::queryDarkMode()
+{
+    /* XXX This leaves out high contrast detection as this only
+     * for Qt5 and Gpg4win where it is handled in other places */
+    if (QOperatingSystemVersion::current() < QOperatingSystemVersion(QOperatingSystemVersion::Windows, 10, 0, 17763)) {
+        return false;
+    }
+
+    return !(m_settings.value(QStringLiteral("AppsUseLightTheme"), true).value<bool>());
+}
+
 KColorSchemeWatcherWin::KColorSchemeWatcherWin()
 {
     QAbstractEventDispatcher::instance()->installNativeEventFilter(this);

-    m_preferDarkMode = !(m_settings.value(QStringLiteral("AppsUseLightTheme"), true).value<bool>());
+    m_preferDarkMode = queryDarkMode();
 }

 #if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
@@ -29,7 +40,7 @@ bool KColorSchemeWatcherWin::nativeEventFilter(const QByteArray &eventType, void
     switch (msg->message) {
     case WM_SETTINGCHANGE: {
         m_settings.sync();
-        const bool preferDarkModeNow = !(m_settings.value(QStringLiteral("AppsUseLightTheme"), true).value<bool>());
+        const bool preferDarkModeNow = queryDarkMode();
         if (m_preferDarkMode != preferDarkModeNow) {
             m_preferDarkMode = preferDarkModeNow;
             Q_EMIT systemPreferenceChanged();
diff --git a/src/colors/kcolorschemewatcher_win.h b/src/colors/kcolorschemewatcher_win.h
index f3b15e5..0b477d3 100644
--- a/src/colors/kcolorschemewatcher_win.h
+++ b/src/colors/kcolorschemewatcher_win.h
@@ -26,6 +26,8 @@ public:
 #endif

 private:
+    bool queryDarkMode();
+
     QSettings m_settings{QStringLiteral("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize"), QSettings::NativeFormat};
     bool m_preferDarkMode = false;
 };
--
2.45.2
